# Nginx Reverse Proxy Configuration for BECA
# Provides SSL termination and routing for all services

events {
    worker_connections 1024;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 100M;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;

    # Upstream servers
    upstream beca_backend {
        server beca-agent:7860;
    }

    upstream mcp_backend {
        server mcp-server:8080;
    }

    upstream portainer_backend {
        server portainer:9000;
    }

    # HTTP server - redirect to HTTPS
    server {
        listen 80;
        server_name _;
        
        # Allow Let's Encrypt challenges
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect everything else to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server - main configuration
    server {
        listen 443 ssl http2;
        server_name _;

        # SSL certificates (update paths as needed)
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        
        # SSL configuration (modern, secure)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # ============================================
        # BECA Gradio GUI - Main interface
        # ============================================
        location / {
            proxy_pass http://beca_backend;
            proxy_http_version 1.1;
            
            # WebSocket support for Gradio
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts for long-running requests
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Rate limiting
            limit_req zone=general burst=20 nodelay;
        }

        # ============================================
        # MCP Server - Claude integration API
        # ============================================
        location /mcp/ {
            proxy_pass http://mcp_backend/mcp/;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Rate limiting for API
            limit_req zone=api burst=10 nodelay;
        }

        # ============================================
        # Portainer - Docker management UI
        # ============================================
        location /portainer/ {
            proxy_pass http://portainer_backend/;
            proxy_http_version 1.1;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Disable buffering for real-time updates
            proxy_buffering off;
        }

        # Alternative Portainer access (root path)
        location /portainer-ui/ {
            rewrite ^/portainer-ui/(.*) /$1 break;
            proxy_pass http://portainer_backend;
            proxy_http_version 1.1;
            
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # ============================================
        # Health check endpoint
        # ============================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # ============================================
        # API status endpoint
        # ============================================
        location /api/status {
            proxy_pass http://beca_backend/api/status;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
    }

    # ============================================
    # Direct service access (development only)
    # Remove in production or add IP restrictions
    # ============================================
    
    # Direct BECA access (port 7860)
    server {
        listen 7860;
        server_name _;
        
        location / {
            proxy_pass http://beca_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
    }
    
    # Direct MCP access (port 8080)
    server {
        listen 8080;
        server_name _;
        
        location / {
            proxy_pass http://mcp_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
    }
    
    # Direct Portainer access (port 9000)
    server {
        listen 9000;
        server_name _;
        
        location / {
            proxy_pass http://portainer_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
    }
}
